{
  "hash": "bd5fe5b884705dc13a32592355fadecc",
  "result": {
    "markdown": "---\ntitle: \"Restaurants\"\nauthor: \"Greta\"\ndate: \"2023-10-30\"\ncategories: [starwars, code, analysis]\nimage: \"restaurants.png\"\n\nexecute: \n  warning: false\n  message: false\n  \ntoc: true\n---\n\n\n\n\nLet's analyze the `starwars` data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrestaurants <- read_csv(\"https://bcdanl.github.io/data/DOHMH_NYC_Restaurant_Inspection.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfreq <- as.data.frame( table(restaurants$GRADE) )\nprop <- as.data.frame( 100 * prop.table(table(restaurants$GRADE)) )\n\nggplot(restaurants) +\n  geom_boxplot(aes(x = SCORE, y = GRADE, fill = GRADE) ) +\n  facet_grid( `CRITICAL FLAG` ~ . )\n```\n\n::: {.cell-output-display}\n![](starwars_df_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE )\n```\n\n::: {.cell-output-display}\n![](starwars_df_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_grid( `CRITICAL FLAG` ~ GRADE, scales = 'free_x' )\n```\n\n::: {.cell-output-display}\n![](starwars_df_files/figure-html/unnamed-chunk-3-3.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(restaurants) +\n  geom_histogram(aes(x = SCORE), binwidth = 1 ) +\n  facet_wrap( `CRITICAL FLAG` ~ GRADE, scales = 'free' )\n```\n\n::: {.cell-output-display}\n![](starwars_df_files/figure-html/unnamed-chunk-3-4.png){width=672}\n:::\n\n```{.r .cell-code}\nggplot(restaurants) +\n  geom_bar(aes(x = `CRITICAL FLAG`,\n               y = after_stat(prop), group = 1)) +\n  facet_grid( GRADE ~ BORO )\n```\n\n::: {.cell-output-display}\n![](starwars_df_files/figure-html/unnamed-chunk-3-5.png){width=672}\n:::\n\n```{.r .cell-code}\nq2e <- restaurants %>% \n  group_by(`CUISINE DESCRIPTION`) %>% \n  mutate(n = n()) %>% \n  ungroup() %>% \n  filter(dense_rank(-n) <= 10) %>% \n  group_by(`CUISINE DESCRIPTION`, GRADE) %>% \n  count() %>% \n  group_by(`CUISINE DESCRIPTION`) %>% \n  mutate(prop_A = n / sum(n)) %>% \n  filter(GRADE == 'A') %>% \n  arrange(-prop_A)\n```\n:::\n",
    "supporting": [
      "starwars_df_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}